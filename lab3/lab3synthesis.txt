*****************************
* Lab 3 Synthesis Questions *
*****************************
Name(s): Tatsuhiko Araki  
NetID(s): taraki


-----------------------------------------------------------
1) Explain:  The corrupted value of the return value of function part2 is the return address of part2, and that address is causing the segmentation fault. If I specify an array size larger than the actual size, I will run out of buffer space in memory, continue indexing across boundaries, and overwrite the return value. The assembly instruction that causes the Segmentation fault is ret.

-----------------------------------------------------------
2) Instruction 1: <fill_array + 148> 
   Purpose: Verify that the values are correctly placed in the array

   Instruction 2: <fill_array + 162> cmp    0x4(%rsp),%eax
   Purpose: Check to see if the input comes to the top of the stack

   Minimum length to cause a seg fault:15
   Calculation: 10*4(bytes) + 8(bytes) + 8(bytes) = 56(bytes) =14 integer =Maximum allowed value = minimum length to cause a seg fault is 15
-----------------------------------------------------------
3) Agree or Disagree: Disagree
   Explain:  Even Heap-allocated arrays can still cause segmentation faults if the program attempts to access memory that it is not permitted to access, such as dereferencing a NULL pointer or accessing memory outside the bounds of the array.

-----------------------------------------------------------
